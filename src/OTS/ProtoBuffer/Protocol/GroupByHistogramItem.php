<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: table_store_search.proto

namespace Aliyun\OTS\ProtoBuffer\Protocol;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>aliyun.OTS.ProtoBuffer.Protocol.GroupByHistogramItem</code>
 */
class GroupByHistogramItem extends \Aliyun\OTS\ProtoBuffer\Protocol\Message
{
    /**
     * Generated from protobuf field <code>optional bytes key = 1;</code>
     */
    private $key = '';
    private $has_key = false;
    /**
     * Generated from protobuf field <code>optional int64 value = 2;</code>
     */
    private $value = 0;
    private $has_value = false;
    /**
     * Generated from protobuf field <code>optional .aliyun.OTS.ProtoBuffer.Protocol.AggregationsResult sub_aggs_result = 3;</code>
     */
    private $sub_aggs_result = null;
    private $has_sub_aggs_result = false;
    /**
     * Generated from protobuf field <code>optional .aliyun.OTS.ProtoBuffer.Protocol.GroupBysResult sub_group_bys_result = 4;</code>
     */
    private $sub_group_bys_result = null;
    private $has_sub_group_bys_result = false;

    public function __construct() {
        \GPBMetadata\TableStoreSearch::initOnce();
        parent::__construct();
    }

    /**
     * Generated from protobuf field <code>optional bytes key = 1;</code>
     * @return string
     */
    public function getKey()
    {
        return $this->key;
    }

    /**
     * Generated from protobuf field <code>optional bytes key = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setKey($var)
    {
        GPBUtil::checkString($var, False);
        $this->key = $var;
        $this->has_key = true;

        return $this;
    }

    public function hasKey()
    {
        return $this->has_key;
    }

    /**
     * Generated from protobuf field <code>optional int64 value = 2;</code>
     * @return int|string
     */
    public function getValue()
    {
        return $this->value;
    }

    /**
     * Generated from protobuf field <code>optional int64 value = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setValue($var)
    {
        GPBUtil::checkInt64($var);
        $this->value = $var;
        $this->has_value = true;

        return $this;
    }

    public function hasValue()
    {
        return $this->has_value;
    }

    /**
     * Generated from protobuf field <code>optional .aliyun.OTS.ProtoBuffer.Protocol.AggregationsResult sub_aggs_result = 3;</code>
     * @return \Aliyun\OTS\ProtoBuffer\Protocol\AggregationsResult
     */
    public function getSubAggsResult()
    {
        return $this->sub_aggs_result;
    }

    /**
     * Generated from protobuf field <code>optional .aliyun.OTS.ProtoBuffer.Protocol.AggregationsResult sub_aggs_result = 3;</code>
     * @param \Aliyun\OTS\ProtoBuffer\Protocol\AggregationsResult $var
     * @return $this
     */
    public function setSubAggsResult($var)
    {
        GPBUtil::checkMessage($var, \Aliyun\OTS\ProtoBuffer\Protocol\AggregationsResult::class);
        $this->sub_aggs_result = $var;
        $this->has_sub_aggs_result = true;

        return $this;
    }

    public function hasSubAggsResult()
    {
        return $this->has_sub_aggs_result;
    }

    /**
     * Generated from protobuf field <code>optional .aliyun.OTS.ProtoBuffer.Protocol.GroupBysResult sub_group_bys_result = 4;</code>
     * @return \Aliyun\OTS\ProtoBuffer\Protocol\GroupBysResult
     */
    public function getSubGroupBysResult()
    {
        return $this->sub_group_bys_result;
    }

    /**
     * Generated from protobuf field <code>optional .aliyun.OTS.ProtoBuffer.Protocol.GroupBysResult sub_group_bys_result = 4;</code>
     * @param \Aliyun\OTS\ProtoBuffer\Protocol\GroupBysResult $var
     * @return $this
     */
    public function setSubGroupBysResult($var)
    {
        GPBUtil::checkMessage($var, \Aliyun\OTS\ProtoBuffer\Protocol\GroupBysResult::class);
        $this->sub_group_bys_result = $var;
        $this->has_sub_group_bys_result = true;

        return $this;
    }

    public function hasSubGroupBysResult()
    {
        return $this->has_sub_group_bys_result;
    }

}

