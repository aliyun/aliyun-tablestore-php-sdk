<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: table_store_search.proto

namespace Aliyun\OTS\ProtoBuffer\Protocol;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>aliyun.OTS.ProtoBuffer.Protocol.SubAggSort</code>
 */
class SubAggSort extends \Aliyun\OTS\ProtoBuffer\Protocol\Message
{
    /**
     * Generated from protobuf field <code>optional string sub_agg_name = 1;</code>
     */
    private $sub_agg_name = '';
    private $has_sub_agg_name = false;
    /**
     * Generated from protobuf field <code>optional .aliyun.OTS.ProtoBuffer.Protocol.SortOrder order = 2;</code>
     */
    private $order = 0;
    private $has_order = false;

    public function __construct() {
        \GPBMetadata\TableStoreSearch::initOnce();
        parent::__construct();
    }

    /**
     * Generated from protobuf field <code>optional string sub_agg_name = 1;</code>
     * @return string
     */
    public function getSubAggName()
    {
        return $this->sub_agg_name;
    }

    /**
     * Generated from protobuf field <code>optional string sub_agg_name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setSubAggName($var)
    {
        GPBUtil::checkString($var, True);
        $this->sub_agg_name = $var;
        $this->has_sub_agg_name = true;

        return $this;
    }

    public function hasSubAggName()
    {
        return $this->has_sub_agg_name;
    }

    /**
     * Generated from protobuf field <code>optional .aliyun.OTS.ProtoBuffer.Protocol.SortOrder order = 2;</code>
     * @return int
     */
    public function getOrder()
    {
        return $this->order;
    }

    /**
     * Generated from protobuf field <code>optional .aliyun.OTS.ProtoBuffer.Protocol.SortOrder order = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setOrder($var)
    {
        GPBUtil::checkEnum($var, \Aliyun\OTS\ProtoBuffer\Protocol\SortOrder::class);
        $this->order = $var;
        $this->has_order = true;

        return $this;
    }

    public function hasOrder()
    {
        return $this->has_order;
    }

}

