<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: table_store.proto

namespace Aliyun\OTS\ProtoBuffer\Protocol;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>aliyun.OTS.ProtoBuffer.Protocol.SearchConsumedCapacity</code>
 */
class SearchConsumedCapacity extends \Aliyun\OTS\ProtoBuffer\Protocol\Message
{
    /**
     * Generated from protobuf field <code>optional string table_name = 1;</code>
     */
    private $table_name = '';
    private $has_table_name = false;
    /**
     * Generated from protobuf field <code>optional string index_name = 2;</code>
     */
    private $index_name = '';
    private $has_index_name = false;
    /**
     * Generated from protobuf field <code>optional .aliyun.OTS.ProtoBuffer.Protocol.ConsumedCapacity consumed = 3;</code>
     */
    private $consumed = null;
    private $has_consumed = false;
    /**
     * Generated from protobuf field <code>optional .aliyun.OTS.ProtoBuffer.Protocol.ReservedThroughput reserved_throughput = 4;</code>
     */
    private $reserved_throughput = null;
    private $has_reserved_throughput = false;

    public function __construct() {
        \GPBMetadata\TableStore::initOnce();
        parent::__construct();
    }

    /**
     * Generated from protobuf field <code>optional string table_name = 1;</code>
     * @return string
     */
    public function getTableName()
    {
        return $this->table_name;
    }

    /**
     * Generated from protobuf field <code>optional string table_name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setTableName($var)
    {
        GPBUtil::checkString($var, True);
        $this->table_name = $var;
        $this->has_table_name = true;

        return $this;
    }

    public function hasTableName()
    {
        return $this->has_table_name;
    }

    /**
     * Generated from protobuf field <code>optional string index_name = 2;</code>
     * @return string
     */
    public function getIndexName()
    {
        return $this->index_name;
    }

    /**
     * Generated from protobuf field <code>optional string index_name = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setIndexName($var)
    {
        GPBUtil::checkString($var, True);
        $this->index_name = $var;
        $this->has_index_name = true;

        return $this;
    }

    public function hasIndexName()
    {
        return $this->has_index_name;
    }

    /**
     * Generated from protobuf field <code>optional .aliyun.OTS.ProtoBuffer.Protocol.ConsumedCapacity consumed = 3;</code>
     * @return \Aliyun\OTS\ProtoBuffer\Protocol\ConsumedCapacity
     */
    public function getConsumed()
    {
        return $this->consumed;
    }

    /**
     * Generated from protobuf field <code>optional .aliyun.OTS.ProtoBuffer.Protocol.ConsumedCapacity consumed = 3;</code>
     * @param \Aliyun\OTS\ProtoBuffer\Protocol\ConsumedCapacity $var
     * @return $this
     */
    public function setConsumed($var)
    {
        GPBUtil::checkMessage($var, \Aliyun\OTS\ProtoBuffer\Protocol\ConsumedCapacity::class);
        $this->consumed = $var;
        $this->has_consumed = true;

        return $this;
    }

    public function hasConsumed()
    {
        return $this->has_consumed;
    }

    /**
     * Generated from protobuf field <code>optional .aliyun.OTS.ProtoBuffer.Protocol.ReservedThroughput reserved_throughput = 4;</code>
     * @return \Aliyun\OTS\ProtoBuffer\Protocol\ReservedThroughput
     */
    public function getReservedThroughput()
    {
        return $this->reserved_throughput;
    }

    /**
     * Generated from protobuf field <code>optional .aliyun.OTS.ProtoBuffer.Protocol.ReservedThroughput reserved_throughput = 4;</code>
     * @param \Aliyun\OTS\ProtoBuffer\Protocol\ReservedThroughput $var
     * @return $this
     */
    public function setReservedThroughput($var)
    {
        GPBUtil::checkMessage($var, \Aliyun\OTS\ProtoBuffer\Protocol\ReservedThroughput::class);
        $this->reserved_throughput = $var;
        $this->has_reserved_throughput = true;

        return $this;
    }

    public function hasReservedThroughput()
    {
        return $this->has_reserved_throughput;
    }

}

