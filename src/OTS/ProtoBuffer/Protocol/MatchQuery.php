<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: table_store_search.proto

namespace Aliyun\OTS\ProtoBuffer\Protocol;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>aliyun.OTS.ProtoBuffer.Protocol.MatchQuery</code>
 */
class MatchQuery extends \Aliyun\OTS\ProtoBuffer\Protocol\Message
{
    /**
     * Generated from protobuf field <code>optional string field_name = 1;</code>
     */
    private $field_name = '';
    private $has_field_name = false;
    /**
     * Generated from protobuf field <code>optional string text = 2;</code>
     */
    private $text = '';
    private $has_text = false;
    /**
     * Generated from protobuf field <code>optional int32 minimum_should_match = 3;</code>
     */
    private $minimum_should_match = 0;
    private $has_minimum_should_match = false;
    /**
     * Generated from protobuf field <code>optional .aliyun.OTS.ProtoBuffer.Protocol.QueryOperator operator = 4;</code>
     */
    private $operator = 0;
    private $has_operator = false;

    public function __construct() {
        \GPBMetadata\TableStoreSearch::initOnce();
        parent::__construct();
    }

    /**
     * Generated from protobuf field <code>optional string field_name = 1;</code>
     * @return string
     */
    public function getFieldName()
    {
        return $this->field_name;
    }

    /**
     * Generated from protobuf field <code>optional string field_name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setFieldName($var)
    {
        GPBUtil::checkString($var, True);
        $this->field_name = $var;
        $this->has_field_name = true;

        return $this;
    }

    public function hasFieldName()
    {
        return $this->has_field_name;
    }

    /**
     * Generated from protobuf field <code>optional string text = 2;</code>
     * @return string
     */
    public function getText()
    {
        return $this->text;
    }

    /**
     * Generated from protobuf field <code>optional string text = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setText($var)
    {
        GPBUtil::checkString($var, True);
        $this->text = $var;
        $this->has_text = true;

        return $this;
    }

    public function hasText()
    {
        return $this->has_text;
    }

    /**
     * Generated from protobuf field <code>optional int32 minimum_should_match = 3;</code>
     * @return int
     */
    public function getMinimumShouldMatch()
    {
        return $this->minimum_should_match;
    }

    /**
     * Generated from protobuf field <code>optional int32 minimum_should_match = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setMinimumShouldMatch($var)
    {
        GPBUtil::checkInt32($var);
        $this->minimum_should_match = $var;
        $this->has_minimum_should_match = true;

        return $this;
    }

    public function hasMinimumShouldMatch()
    {
        return $this->has_minimum_should_match;
    }

    /**
     * Generated from protobuf field <code>optional .aliyun.OTS.ProtoBuffer.Protocol.QueryOperator operator = 4;</code>
     * @return int
     */
    public function getOperator()
    {
        return $this->operator;
    }

    /**
     * Generated from protobuf field <code>optional .aliyun.OTS.ProtoBuffer.Protocol.QueryOperator operator = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setOperator($var)
    {
        GPBUtil::checkEnum($var, \Aliyun\OTS\ProtoBuffer\Protocol\QueryOperator::class);
        $this->operator = $var;
        $this->has_operator = true;

        return $this;
    }

    public function hasOperator()
    {
        return $this->has_operator;
    }

}

