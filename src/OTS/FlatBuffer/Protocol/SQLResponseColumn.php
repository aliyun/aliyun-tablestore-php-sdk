<?php
// automatically generated by the FlatBuffers compiler, do not modify

namespace Aliyun\OTS\FlatBuffer\Protocol;

use \Google\FlatBuffers\Struct;
use \Google\FlatBuffers\Table;
use \Google\FlatBuffers\ByteBuffer;
use \Google\FlatBuffers\FlatBufferBuilder;

class SQLResponseColumn extends Table
{
    /**
     * @param ByteBuffer $bb
     * @return SQLResponseColumn
     */
    public static function getRootAsSQLResponseColumn(ByteBuffer $bb)
    {
        $obj = new SQLResponseColumn();
        return ($obj->init($bb->getInt($bb->getPosition()) + $bb->getPosition(), $bb));
    }

    /**
     * @param int $_i offset
     * @param ByteBuffer $_bb
     * @return SQLResponseColumn
     **/
    public function init($_i, ByteBuffer $_bb)
    {
        $this->bb_pos = $_i;
        $this->bb = $_bb;
        return $this;
    }

    public function getColumnName()
    {
        $o = $this->__offset(4);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /**
     * @return sbyte
     */
    public function getColumnType()
    {
        $o = $this->__offset(6);
        return $o != 0 ? $this->bb->getSbyte($o + $this->bb_pos) : \Aliyun\OTS\FlatBuffer\Protocol\DataType::NONE;
    }

    public function getColumnValue()
    {
        $obj = new ColumnValues();
        $o = $this->__offset(8);
        return $o != 0 ? $obj->init($this->__indirect($o + $this->bb_pos), $this->bb) : 0;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return void
     */
    public static function startSQLResponseColumn(FlatBufferBuilder $builder)
    {
        $builder->StartObject(3);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return SQLResponseColumn
     */
    public static function createSQLResponseColumn(FlatBufferBuilder $builder, $column_name, $column_type, $column_value)
    {
        $builder->startObject(3);
        self::addColumnName($builder, $column_name);
        self::addColumnType($builder, $column_type);
        self::addColumnValue($builder, $column_value);
        $o = $builder->endObject();
        return $o;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addColumnName(FlatBufferBuilder $builder, $columnName)
    {
        $builder->addOffsetX(0, $columnName, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param sbyte
     * @return void
     */
    public static function addColumnType(FlatBufferBuilder $builder, $columnType)
    {
        $builder->addSbyteX(1, $columnType, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param int
     * @return void
     */
    public static function addColumnValue(FlatBufferBuilder $builder, $columnValue)
    {
        $builder->addOffsetX(2, $columnValue, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return int table offset
     */
    public static function endSQLResponseColumn(FlatBufferBuilder $builder)
    {
        $o = $builder->endObject();
        return $o;
    }
}
